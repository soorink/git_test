// Generated by view binder compiler. Do not edit!
package inswave.wmatrix.template.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import inswave.wmatrix.template.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TemplateMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FrameLayout containerCanvas;

  @NonNull
  public final FrameLayout containerLicense;

  @NonNull
  public final FrameLayout containerMainLoading;

  @NonNull
  public final FrameLayout containerMainWeb;

  @NonNull
  public final FrameLayout containerStartWebView;

  private TemplateMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull FrameLayout containerCanvas, @NonNull FrameLayout containerLicense,
      @NonNull FrameLayout containerMainLoading, @NonNull FrameLayout containerMainWeb,
      @NonNull FrameLayout containerStartWebView) {
    this.rootView = rootView;
    this.containerCanvas = containerCanvas;
    this.containerLicense = containerLicense;
    this.containerMainLoading = containerMainLoading;
    this.containerMainWeb = containerMainWeb;
    this.containerStartWebView = containerStartWebView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TemplateMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TemplateMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.template_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TemplateMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container_canvas;
      FrameLayout containerCanvas = ViewBindings.findChildViewById(rootView, id);
      if (containerCanvas == null) {
        break missingId;
      }

      id = R.id.container_license;
      FrameLayout containerLicense = ViewBindings.findChildViewById(rootView, id);
      if (containerLicense == null) {
        break missingId;
      }

      id = R.id.container_main_loading;
      FrameLayout containerMainLoading = ViewBindings.findChildViewById(rootView, id);
      if (containerMainLoading == null) {
        break missingId;
      }

      id = R.id.container_main_web;
      FrameLayout containerMainWeb = ViewBindings.findChildViewById(rootView, id);
      if (containerMainWeb == null) {
        break missingId;
      }

      id = R.id.container_start_web_view;
      FrameLayout containerStartWebView = ViewBindings.findChildViewById(rootView, id);
      if (containerStartWebView == null) {
        break missingId;
      }

      return new TemplateMainBinding((ConstraintLayout) rootView, containerCanvas, containerLicense,
          containerMainLoading, containerMainWeb, containerStartWebView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
